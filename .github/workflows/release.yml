name: Windows Build
on:
  push:
    tags:
      - '*-desktop'

jobs:
  windows-build:
    runs-on: windows-latest
    timeout-minutes: 40

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup-gradle
        with:
          gradle-cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}

      - name: Create local.properties
        shell: pwsh
        env:
          SERVER_ID: ${{ secrets.SERVER_ID }}
          BACKEND_URL: ${{ secrets.BACKEND_URL }}
          SDK_DIR: ${{ runner.temp }}\android-sdk
        run: |
          @"
          sdk.dir=$env:SDK_DIR
          serverId=$env:SERVER_ID
          backendUrl=$env:BACKEND_URL
          "@ | Out-File -FilePath local.properties -Encoding UTF8

      - name: Create path variables
        id: path_variables
        shell: pwsh
        run: |
          $tag = $(git describe --tags --abbrev=0 --match "*-desktop")
          $version = $tag -replace '-desktop$', ''
          $name_msi = "ZeroShare-${version}.msi"
          $path_msi = "composeApp/build/compose/binaries/main/msi/${name}"
          $name_exe = "ZeroShare-${version}.exe"
          $path_exe = "composeApp/build/compose/binaries/main/exe/${name}"
          "TAG=$tag" >> $env:GITHUB_ENV
          "VERSION=$version" >> $env:GITHUB_ENV
          "RELEASE_PATH_MSI=$path_msi" >> $env:GITHUB_ENV
          "NAME_MSI=$name_msi" >> $env:GITHUB_ENV
          "RELEASE_PATH_EXE=$path_exe" >> $env:GITHUB_ENV
          "NAME_EXE=$name_exe" >> $env:GITHUB_ENV

      - name: Create MSI
        run: ./gradlew packageMsi packageExe

      - name: Upload asset msi
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.RELEASE_PATH_MSI }}
          name: ${{ env.NAME_MSI }}

      - name: Upload asset exe
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.RELEASE_PATH_EXE }}
          name: ${{ env.NAME_EXE }}

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            **/build/compose/logs/*

  linux-build:
    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup-gradle
        with:
          gradle-cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}

      - name: Create local.properties
        shell: bash
        env:
          SERVER_ID: ${{ secrets.SERVER_ID }}
          BACKEND_URL: ${{ secrets.BACKEND_URL }}
          SDK_DIR: ${{ runner.temp }}/android-sdk
        run: |
          cat << EOF > local.properties
          sdk.dir=$SDK_DIR
          serverId=$SERVER_ID
          backendUrl=$BACKEND_URL
          EOF

      - name: Create path variables
        id: path_variables
        run: |
          tag=$(git describe --tags --abbrev=0 --match "*-desktop")
          version=$(echo "$tag" | sed 's/-desktop$//')
          name_deb="ZeroShare-${version}.deb"
          path_deb="composeApp/build/compose/binaries/main/deb/${name}"
          name_rpm="ZeroShare-${version}.rpm"
          path_rpm="composeApp/build/compose/binaries/main/rpm/${name}"
          echo "TAG=$tag" >> $GITHUB_ENV
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "RELEASE_PATH_DEB=$path_deb" >> $GITHUB_ENV
          echo "RELEASE_PATH_RPM=$path_rpm" >> $GITHUB_ENV
          echo "NAME_DEB=$name_deb" >> $GITHUB_ENV
          echo "NAME_RPM=$name_rpm" >> $GITHUB_ENV

      - name: Create RPM & DEB
        run: ./gradlew packageDeb packageRpm

      - name: Upload RPM
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.RELEASE_PATH_RPM }}
          name: ${{ env.NAME_RPM }}

      - name: Upload DEB
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.RELEASE_PATH_DEB }}
          name: ${{ env.NAME_DEB }}

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            **/build/compose/logs/*  


  macos-build:
    runs-on: macos-latest
    outputs:
      release_tag: ${{ steps.path_variables.outputs.tag }}
    timeout-minutes: 40

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup-gradle
        with:
          gradle-cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}
      
      - name: Create local.properties
        shell: bash
        env:
          SERVER_ID: ${{ secrets.SERVER_ID }}
          BACKEND_URL: ${{ secrets.BACKEND_URL }}
          SDK_DIR: ${{ runner.temp }}/android-sdk
        run: |
          cat << EOF > local.properties
          sdk.dir=$SDK_DIR
          serverId=$SERVER_ID
          backendUrl=$BACKEND_URL
          EOF

      - name: Create path variables
        id: path_variables
        run: |
          tag=$(git describe --tags --abbrev=0 --match "*-desktop")
          version=$(echo "$tag" | sed 's/-desktop$//')
          name="ZeroShare-${version}.dmg"
          path="composeApp/build/compose/binaries/main/dmg/${name}"
          echo "tag=$tag" >> $GITHUB_OUTPUT
          echo "TAG=$tag" >> $GITHUB_ENV
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "RELEASE_PATH=$path" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=$name" >> $GITHUB_ENV

      - name: Create DMG
        run: ./gradlew packageDmg

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            **/build/compose/logs/*  

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.RELEASE_PATH }}
          retention-days: 1

  release-github:
    needs: [windows-build, linux-build, macos-build]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: List artifacts
        run: ls -R

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.dmg
            *.msi
            *.exe
            *.rpm
            *.deb
          draft: true
          tag_name: ${{ needs.build-macos.outputs.release_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}